[gd_scene load_steps=14 format=3 uid="uid://buhaqx55xwv6q"]

[ext_resource type="TileSet" uid="uid://cufwmfj0me60d" path="res://Scenes/Tilemap/Images/tileset.tres" id="1_hvy2l"]
[ext_resource type="PackedScene" uid="uid://bl7gxbsuiscw7" path="res://Scenes/Player/player.tscn" id="2_1w3xb"]
[ext_resource type="Texture2D" uid="uid://colhxcj3qc1k3" path="res://Scenes/Levels/backgrounds/texture_08.png" id="3_5vrwl"]
[ext_resource type="PackedScene" uid="uid://dcdae13hoit18" path="res://Scenes/Userinterfaces/Scene Swither Button.tscn" id="4_5pteh"]
[ext_resource type="FontFile" uid="uid://dg2torqk7ukw7" path="res://Assets/Font/VictorMono-Bold.ttf" id="4_23pd1"]

[sub_resource type="GDScript" id="GDScript_sgy8g"]
script/source = "extends Node2D

#var gravityDirection = Vector2.DOWN

var isFinished = false
@export var isDark = false
var timePassed = 0

# This used for Checkpoints so the time until then is registered
var preTimePassed = 0
var preIsDark = false
var gravityDirection = Vector2.DOWN

var preGravityDirection = Vector2.DOWN

var isShellVisible = false

const DARK_SHADE = 0.15
const DARK_MODULATION_COLOR = Color(DARK_SHADE, DARK_SHADE, DARK_SHADE)


# Called when the node enters the scene tree for the first time.
func _ready():
	EventBus.addEventListener('goal_entered', goal_entered)
	EventBus.addEventListener('die', died)
	EventBus.addEventListener('checkpoint', entered_checkpoint)
	EventBus.addEventListener('toggle_darkness', toggle_darkness)
	EventBus.addEventListener('invert_gravity', invert_gravity)

	EventBus.addEventListener('rotate_right', rotate_right)
	EventBus.addEventListener('rotate_left', rotate_left)

	# Calling this function Ones so the inital Dark Mode is saved
	entered_checkpoint()


func rotate_right(args = {}):
	match gravityDirection:
		Vector2.DOWN:
			gravityDirection = Vector2.LEFT
		Vector2.LEFT:
			gravityDirection = Vector2.UP
		Vector2.UP:
			gravityDirection = Vector2.RIGHT
		Vector2.RIGHT:
			gravityDirection = Vector2.DOWN

func rotate_left(args = {}):
	match gravityDirection:
		Vector2.DOWN:
			gravityDirection = Vector2.RIGHT
		Vector2.LEFT:
			gravityDirection = Vector2.DOWN
		Vector2.UP:
			gravityDirection = Vector2.LEFT
		Vector2.RIGHT:
			gravityDirection = Vector2.UP

func invert_gravity(_args = {}):
	gravityDirection *= -1

func toggle_darkness(args = {}):
	print('Toggle Darkness')
	isDark = !isDark

func died(args = {}):
	timePassed = preTimePassed
	isDark = preIsDark
	gravityDirection = preGravityDirection

func entered_checkpoint(args = {}):
	preTimePassed = timePassed
	preIsDark = isDark
	preGravityDirection = gravityDirection

func _debug_print(name, value):
	pass

func goal_entered(args = {}):
	isFinished = true

	$\"ui/passed_menu/passed\".play(\"Passed Menu Appear\")

	var tween = create_tween()

	var colorRect = $\"ui/passed_menu/bg\"

	tween.tween_property(colorRect, 'color', Color.from_hsv((int(timePassed) % 10) * 0.1, 1, 1, 0.3), 2)

func _process(delta):

	if Input.is_action_just_pressed(\"gdshell_toggle_ui\"):
		isShellVisible = !isShellVisible

	if not isFinished and not isShellVisible:
		timePassed += delta

	if isDark:
		$\"CanvasModulate\".color = lerp(
			$\"CanvasModulate\".color,
			DARK_MODULATION_COLOR,
			0.1
		)
		$\"ParallaxBackground/CanvasModulate\".color = lerp(
			$\"ParallaxBackground/CanvasModulate\".color,
			DARK_MODULATION_COLOR,
			0.1
		)
	else:
		$\"CanvasModulate\".color = lerp(
			$\"CanvasModulate\".color,
			Color.WHITE,
			0.1,
		)
		$\"ParallaxBackground/CanvasModulate\".color = lerp(
			$\"ParallaxBackground/CanvasModulate\".color,
			Color.WHITE,
			0.1,
		)
"

[sub_resource type="CanvasTexture" id="CanvasTexture_oj7du"]
diffuse_texture = ExtResource("3_5vrwl")

[sub_resource type="GDScript" id="GDScript_prxy8"]
script/source = "extends CanvasLayer

@onready var root = Helpers.getSceneRoot()

func _ready():
	print()
	
	var scene_file_name = get_tree().current_scene.scene_file_path.split('/')[-1]
	
	print(scene_file_name)
	
	if scene_file_name in Global.levels:
		var nextLevelIndex = Global.levels.find(scene_file_name) + 1
		
		if nextLevelIndex == Global.levels.size():
			$\"passed_menu/v/m/VBoxContainer/v/continue_button\".queue_free()
		else:
			$\"passed_menu/v/m/VBoxContainer/v/continue_button\".scene = 'res://Scenes/Levels/Chapters/' + Global.levels[nextLevelIndex]
		
		print('NExt', nextLevelIndex)
	else:
		$\"passed_menu/v/m/VBoxContainer/v/continue_button\".queue_free()


func _process(delta):
	$\"pause_menu\".visible = get_tree().paused
	
	var formattedTime = Helpers.formatSeconds(root.timePassed, true)
	
	$\"ui/v/top/time\".text = formattedTime
	$\"passed_menu/v/m/VBoxContainer/final_time\".text = formattedTime
	
	if Input.is_action_just_pressed(\"ui_cancel\"):
		if root.isShellVisible:
			root.isShellVisible = false
			GDShell.get_ui_handler().visible = false
		else:
			get_tree().paused = !get_tree().paused


func _on_pause_button_pressed():
	get_tree().paused = true

func _on_continue_button_pressed():
	get_tree().paused = false
"

[sub_resource type="LabelSettings" id="LabelSettings_jnner"]
font = ExtResource("4_23pd1")
shadow_color = Color(0.00392157, 0.00392157, 0.00392157, 1)

[sub_resource type="GDScript" id="GDScript_dn20k"]
script/source = "extends Button


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
	
func _on_pressed():
	get_tree().reload_current_scene()
"

[sub_resource type="Animation" id="Animation_f61uf"]
resource_name = "Passed Menu Appear"
length = 1.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("v:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1.3),
"transitions": PackedFloat32Array(0.466516, 1),
"update": 0,
"values": [Vector2(611, 577), Vector2(611, 178)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../ui:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.6),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_0j0r2"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("v:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(324, 178)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../ui:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_h1gw1"]
_data = {
"Passed Menu Appear": SubResource("Animation_f61uf"),
"RESET": SubResource("Animation_0j0r2")
}

[node name="Level" type="Node2D"]
script = SubResource("GDScript_sgy8g")

[node name="TileMap" type="TileMap" parent="."]
tile_set = ExtResource("1_hvy2l")
format = 2
layer_0/name = "Main Layer"
layer_0/z_index = 1
layer_0/tile_data = PackedInt32Array(196610, 720897, 2, 131074, 720897, 0, 196609, 655361, 1, 131073, 655361, 0, 196608, 655361, 1, 131072, 655361, 0, 262143, 655361, 1, 196607, 655361, 0, 262142, 655361, 1, 196606, 655361, 0, 262141, 524289, 1, 196605, 524289, 0, 262146, 720897, 2, 262145, 655361, 1, 262144, 655361, 1, 327679, 655361, 1, 327678, 655361, 1, 327677, 524289, 1, 327682, 720897, 3, 327681, 589825, 3, 327680, 589825, 3, 393215, 589825, 3, 393214, 589825, 3, 393213, 524289, 3)
layer_1/name = "Background"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array()
layer_2/name = "Foreground"
layer_2/enabled = true
layer_2/modulate = Color(1, 1, 1, 0.352941)
layer_2/y_sort_enabled = false
layer_2/y_sort_origin = 0
layer_2/z_index = 2
layer_2/tile_data = PackedInt32Array()

[node name="player" parent="." instance=ExtResource("2_1w3xb")]

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2(1920, 1080)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2(968, 540)
scale = Vector2(1.89063, 1.0625)
texture = SubResource("CanvasTexture_oj7du")

[node name="CanvasModulate" type="CanvasModulate" parent="ParallaxBackground"]

[node name="ui" type="CanvasLayer" parent="."]
process_mode = 3
layer = 128
script = SubResource("GDScript_prxy8")

[node name="ui" type="Control" parent="ui"]
layout_mode = 3
anchor_left = 0.05
anchor_top = 0.05
anchor_right = 0.95
anchor_bottom = 0.95
offset_bottom = -38.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1, 1.0904)

[node name="v" type="VBoxContainer" parent="ui/ui"]
layout_mode = 1
anchors_preset = -1
anchor_right = 1.0
anchor_bottom = 0.916
offset_bottom = -0.176025
grow_horizontal = 2
grow_vertical = 2

[node name="top" type="HBoxContainer" parent="ui/ui/v"]
layout_mode = 2

[node name="time" type="Label" parent="ui/ui/v/top"]
layout_mode = 2
text = "10:00:00"
label_settings = SubResource("LabelSettings_jnner")

[node name="pause_button" type="Button" parent="ui/ui/v/top"]
layout_mode = 2
size_flags_horizontal = 10
text = "Pause"

[node name="bottom" type="HBoxContainer" parent="ui/ui/v"]
visible = false
layout_mode = 2
size_flags_vertical = 10
alignment = 2

[node name="Button" type="Button" parent="ui/ui/v/bottom"]
layout_mode = 2
text = "Power Up"

[node name="Button2" type="Button" parent="ui/ui/v/bottom"]
layout_mode = 2
text = "Power Up"

[node name="pause_menu" type="Control" parent="ui"]
visible = false
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="ColorRect" type="ColorRect" parent="ui/pause_menu"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.607843, 0.196078, 0.392157, 0.27451)

[node name="v" type="ColorRect" parent="ui/pause_menu"]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.595833
anchor_top = 0.1
anchor_right = 0.9625
anchor_bottom = 0.9
grow_horizontal = 2
grow_vertical = 2
color = Color(0.113725, 0.113725, 0.113725, 1)
metadata/_edit_use_anchors_ = true

[node name="m" type="MarginContainer" parent="ui/pause_menu/v"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 30
theme_override_constants/margin_top = 20
theme_override_constants/margin_right = 20
theme_override_constants/margin_bottom = 20

[node name="VBoxContainer" type="VBoxContainer" parent="ui/pause_menu/v/m"]
layout_mode = 2
theme_override_constants/separation = 30

[node name="Label" type="Label" parent="ui/pause_menu/v/m/VBoxContainer"]
layout_mode = 2
text = "Paused"

[node name="v" type="VBoxContainer" parent="ui/pause_menu/v/m/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="continue_button" type="Button" parent="ui/pause_menu/v/m/VBoxContainer/v"]
layout_mode = 2
text = "Continue"

[node name="Scene Swither Button" parent="ui/pause_menu/v/m/VBoxContainer/v" instance=ExtResource("4_5pteh")]
layout_mode = 2
text = "Main Menu"
scene = "res://Scenes/Userinterfaces/Main.tscn"

[node name="passed_menu" type="Control" parent="ui"]
visible = false
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="bg" type="ColorRect" parent="ui/passed_menu"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 0)

[node name="v" type="ColorRect" parent="ui/passed_menu"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -156.0
offset_top = -92.0
offset_right = 156.0
offset_bottom = 165.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.113725, 0.113725, 0.113725, 1)

[node name="m" type="MarginContainer" parent="ui/passed_menu/v"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 30
theme_override_constants/margin_top = 20
theme_override_constants/margin_right = 20
theme_override_constants/margin_bottom = 20

[node name="VBoxContainer" type="VBoxContainer" parent="ui/passed_menu/v/m"]
layout_mode = 2
theme_override_constants/separation = 15

[node name="Label" type="Label" parent="ui/passed_menu/v/m/VBoxContainer"]
layout_mode = 2
text = "PASSED!"
horizontal_alignment = 1

[node name="final_time" type="Label" parent="ui/passed_menu/v/m/VBoxContainer"]
layout_mode = 2
text = "10:10:10"
horizontal_alignment = 1

[node name="v" type="VBoxContainer" parent="ui/passed_menu/v/m/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="continue_button" parent="ui/passed_menu/v/m/VBoxContainer/v" instance=ExtResource("4_5pteh")]
layout_mode = 2
text = "Next Level"

[node name="retry" type="Button" parent="ui/passed_menu/v/m/VBoxContainer/v"]
layout_mode = 2
text = "Retry"
script = SubResource("GDScript_dn20k")

[node name="Scene Swither Button" parent="ui/passed_menu/v/m/VBoxContainer/v" instance=ExtResource("4_5pteh")]
layout_mode = 2
text = "Main Menu"
scene = "res://Scenes/Userinterfaces/Main.tscn"

[node name="passed" type="AnimationPlayer" parent="ui/passed_menu"]
libraries = {
"": SubResource("AnimationLibrary_h1gw1")
}

[node name="CanvasModulate" type="CanvasModulate" parent="."]

[connection signal="pressed" from="ui/ui/v/top/pause_button" to="ui" method="_on_pause_button_pressed"]
[connection signal="pressed" from="ui/pause_menu/v/m/VBoxContainer/v/continue_button" to="ui" method="_on_continue_button_pressed"]
[connection signal="pressed" from="ui/passed_menu/v/m/VBoxContainer/v/retry" to="ui/passed_menu/v/m/VBoxContainer/v/retry" method="_on_pressed"]
